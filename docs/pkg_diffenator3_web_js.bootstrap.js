"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcreate_wasm_app"] = self["webpackChunkcreate_wasm_app"] || []).push([["pkg_diffenator3_web_js"],{

/***/ "../pkg/diffenator3_web.js":
/*!*********************************!*\
  !*** ../pkg/diffenator3_web.js ***!
  \*********************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __wbg_call_7cccdd69e0791ae2: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_call_7cccdd69e0791ae2),\n/* harmony export */   __wbg_error_7534b8e9a36f1ab4: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_error_7534b8e9a36f1ab4),\n/* harmony export */   __wbg_new_8a6f238a6ece86ea: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_8a6f238a6ece86ea),\n/* harmony export */   __wbg_set_wasm: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm),\n/* harmony export */   __wbg_stack_0ed75d68575b0f3c: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_stack_0ed75d68575b0f3c),\n/* harmony export */   __wbindgen_debug_string: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_debug_string),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_string_new: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_string_new),\n/* harmony export */   __wbindgen_throw: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw),\n/* harmony export */   axes: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.axes),\n/* harmony export */   debugging: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.debugging),\n/* harmony export */   diff_kerns: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.diff_kerns),\n/* harmony export */   diff_tables: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.diff_tables),\n/* harmony export */   diff_words: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.diff_words),\n/* harmony export */   modified_glyphs: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.modified_glyphs),\n/* harmony export */   new_missing_glyphs: () => (/* reexport safe */ _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.new_missing_glyphs)\n/* harmony export */ });\n/* harmony import */ var _diffenator3_web_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./diffenator3_web_bg.wasm */ \"../pkg/diffenator3_web_bg.wasm\");\n/* harmony import */ var _diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./diffenator3_web_bg.js */ \"../pkg/diffenator3_web_bg.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_diffenator3_web_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n_diffenator3_web_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n(0,_diffenator3_web_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm)(_diffenator3_web_bg_wasm__WEBPACK_IMPORTED_MODULE_1__);\n_diffenator3_web_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.__wbindgen_start();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/../pkg/diffenator3_web.js?");

/***/ }),

/***/ "../pkg/diffenator3_web_bg.js":
/*!************************************!*\
  !*** ../pkg/diffenator3_web_bg.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __wbg_call_7cccdd69e0791ae2: () => (/* binding */ __wbg_call_7cccdd69e0791ae2),\n/* harmony export */   __wbg_error_7534b8e9a36f1ab4: () => (/* binding */ __wbg_error_7534b8e9a36f1ab4),\n/* harmony export */   __wbg_new_8a6f238a6ece86ea: () => (/* binding */ __wbg_new_8a6f238a6ece86ea),\n/* harmony export */   __wbg_set_wasm: () => (/* binding */ __wbg_set_wasm),\n/* harmony export */   __wbg_stack_0ed75d68575b0f3c: () => (/* binding */ __wbg_stack_0ed75d68575b0f3c),\n/* harmony export */   __wbindgen_debug_string: () => (/* binding */ __wbindgen_debug_string),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* binding */ __wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_string_new: () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   __wbindgen_throw: () => (/* binding */ __wbindgen_throw),\n/* harmony export */   axes: () => (/* binding */ axes),\n/* harmony export */   debugging: () => (/* binding */ debugging),\n/* harmony export */   diff_kerns: () => (/* binding */ diff_kerns),\n/* harmony export */   diff_tables: () => (/* binding */ diff_tables),\n/* harmony export */   diff_words: () => (/* binding */ diff_words),\n/* harmony export */   modified_glyphs: () => (/* binding */ modified_glyphs),\n/* harmony export */   new_missing_glyphs: () => (/* binding */ new_missing_glyphs)\n/* harmony export */ });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction debugging() {\n    wasm.debugging();\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n * @param {Uint8Array} font_a\n * @param {Uint8Array} font_b\n * @returns {string}\n */\nfunction axes(font_a, font_b) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passArray8ToWasm0(font_a, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray8ToWasm0(font_b, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.axes(ptr0, len0, ptr1, len1);\n        deferred3_0 = ret[0];\n        deferred3_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {Uint8Array} font_a\n * @param {Uint8Array} font_b\n * @param {Function} f\n */\nfunction diff_tables(font_a, font_b, f) {\n    const ptr0 = passArray8ToWasm0(font_a, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray8ToWasm0(font_b, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.diff_tables(ptr0, len0, ptr1, len1, f);\n}\n\n/**\n * @param {Uint8Array} font_a\n * @param {Uint8Array} font_b\n * @param {Function} f\n */\nfunction diff_kerns(font_a, font_b, f) {\n    const ptr0 = passArray8ToWasm0(font_a, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray8ToWasm0(font_b, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.diff_kerns(ptr0, len0, ptr1, len1, f);\n}\n\n/**\n * @param {Uint8Array} font_a\n * @param {Uint8Array} font_b\n * @param {string} location\n * @param {Function} f\n */\nfunction modified_glyphs(font_a, font_b, location, f) {\n    const ptr0 = passArray8ToWasm0(font_a, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray8ToWasm0(font_b, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(location, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.modified_glyphs(ptr0, len0, ptr1, len1, ptr2, len2, f);\n}\n\n/**\n * @param {Uint8Array} font_a\n * @param {Uint8Array} font_b\n * @param {Function} f\n */\nfunction new_missing_glyphs(font_a, font_b, f) {\n    const ptr0 = passArray8ToWasm0(font_a, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray8ToWasm0(font_b, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.new_missing_glyphs(ptr0, len0, ptr1, len1, f);\n}\n\n/**\n * @param {Uint8Array} font_a\n * @param {Uint8Array} font_b\n * @param {string} location\n * @param {Function} f\n */\nfunction diff_words(font_a, font_b, location, f) {\n    const ptr0 = passArray8ToWasm0(font_a, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray8ToWasm0(font_b, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(location, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.diff_words(ptr0, len0, ptr1, len1, ptr2, len2, f);\n}\n\nfunction __wbg_call_7cccdd69e0791ae2() { return handleError(function (arg0, arg1, arg2) {\n    const ret = arg0.call(arg1, arg2);\n    return ret;\n}, arguments) };\n\nfunction __wbg_error_7534b8e9a36f1ab4(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n    }\n};\n\nfunction __wbg_new_8a6f238a6ece86ea() {\n    const ret = new Error();\n    return ret;\n};\n\nfunction __wbg_stack_0ed75d68575b0f3c(arg0, arg1) {\n    const ret = arg1.stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nfunction __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(arg1);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nfunction __wbindgen_init_externref_table() {\n    const table = wasm.__wbindgen_export_2;\n    const offset = table.grow(4);\n    table.set(0, undefined);\n    table.set(offset + 0, undefined);\n    table.set(offset + 1, null);\n    table.set(offset + 2, true);\n    table.set(offset + 3, false);\n    ;\n};\n\nfunction __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return ret;\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack://create-wasm-app/../pkg/diffenator3_web_bg.js?");

/***/ }),

/***/ "../pkg/diffenator3_web_bg.wasm":
/*!**************************************!*\
  !*** ../pkg/diffenator3_web_bg.wasm ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./diffenator3_web_bg.js */ \"../pkg/diffenator3_web_bg.js\");\nmodule.exports = __webpack_require__.v(exports, module.id, \"d2931c49b29e0e7498c5\", {\n\t\"./diffenator3_web_bg.js\": {\n\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\"__wbg_call_7cccdd69e0791ae2\": WEBPACK_IMPORTED_MODULE_0.__wbg_call_7cccdd69e0791ae2,\n\t\t\"__wbg_new_8a6f238a6ece86ea\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_8a6f238a6ece86ea,\n\t\t\"__wbg_stack_0ed75d68575b0f3c\": WEBPACK_IMPORTED_MODULE_0.__wbg_stack_0ed75d68575b0f3c,\n\t\t\"__wbg_error_7534b8e9a36f1ab4\": WEBPACK_IMPORTED_MODULE_0.__wbg_error_7534b8e9a36f1ab4,\n\t\t\"__wbindgen_debug_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_debug_string,\n\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\"__wbindgen_init_externref_table\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_init_externref_table\n\t}\n});\n\n//# sourceURL=webpack://create-wasm-app/../pkg/diffenator3_web_bg.wasm?");

/***/ })

}]);