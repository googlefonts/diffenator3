// AUTO-GENERATED by typescript-type-def

export type F32 = number;
export type Usize = number;

/**
 * Represents a difference between two encoded glyphs
 */
export type GlyphDiff = {

    /**
     * The string representation of the glyph
     */
    "string": string;

    /**
     * The Unicode name of the glyph
     */
    "name": string;

    /**
     * The Unicode codepoint of the glyph
     */
    "unicode": string;

    /**
     * The number of differing pixels
     */
    "differing_pixels": Usize;
};

/**
 * Represents a difference between two renderings, whether words or glyphs
 */
export type Difference = {

    /**
     * The text string which was rendered
     */
    "word": string;

    /**
     * A string representation of the shaped buffer in the first font
     */
    "buffer_a": string;

    /**
     * A string representation of the shaped buffer in the second font, if different
     */
    "buffer_b"?: string;

    /**
     * The number of differing pixels
     */
    "differing_pixels": Usize;

    /**
     * The OpenType features applied to the text
     */
    "ot_features"?: string;

    /**
     * The OpenType language tag applied to the text
     */
    "lang"?: string;
};
export type LocationResult = {

    /**
     * Name of the location in designspace (named instance, or stringified coordinates)
     */
    "location": string;

    /**
     * Coordinates of the location in designspace
     */
    "coords"?: Record<string, F32>;

    /**
     * An error message, if something went wrong
     */
    "error"?: string;

    /**
     * Differences between glyphs
     */
    "glyphs"?: (GlyphDiff)[];

    /**
     * Differences between words
     */
    "words"?: Record<string, (Difference)[]>;
};
export type JSONValue = (null | boolean | number | string | (JSONValue)[] | {
    [key:string]:JSONValue;
});
export type EncodedGlyph = {

    /**
     * The character, as a string
     */
    "string": string;

    /**
     * Name of the character from the Unicode database, if available
     */
    "name"?: string;
};

/**
 * Represents changes to the cmap table - added or removed glyphs
 */
export type CmapDiff = {
    "missing"?: (EncodedGlyph)[];
    "new"?: (EncodedGlyph)[];
};
export type LanguageDiff = {

    /**
     * Support level for font A
     */
    "level_a": string;

    /**
     * Support score for font A
     */
    "score_a": F32;

    /**
     * Number of fixes required for font A
     */
    "fixes_a": Usize;

    /**
     * Support level for font B
     */
    "level_b": string;

    /**
     * Support score for font B
     */
    "score_b": F32;

    /**
     * Number of fixes required for font B
     */
    "fixes_b": Usize;
};
export type Report = {
    "tables"?: JSONValue;
    "kerns"?: JSONValue;
    "cmap_diff"?: CmapDiff;
    "locations"?: (LocationResult)[];
    "languages"?: Record<string, LanguageDiff>;
};
